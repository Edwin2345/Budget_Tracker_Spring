{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\edwin\\\\OneDrive\\\\Desktop\\\\PROJECTS\\\\Budget_Tracker\\\\frontend\\\\src\\\\pages\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport Navbar from \"../components/utils/Navbar\";\nimport ChartComp from \"../components/dashboard/ChartComp\";\nimport TableComp from \"../components/dashboard/TableComp\";\nimport SummaryTable from \"../components/dashboard/SummaryTable\";\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashBoardPage() {\n  _s();\n  //want to store data between renders, but no need rerender if data modified\n  let summaryData = useRef([]);\n  let recentData = useRef([]);\n  let chartData = useRef([]);\n\n  //State to refetch All data when editing/deleting from recent table\n  const [forceRefetch, setForceRefetch] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        summaryData.current = await axios.get(\"http://localhost:8800/summary\");\n        recentData.current = await axios.get(\"http://localhost:8800/summary/recent\");\n\n        /*chartData.current = summaryData.current.map((el)=>{\r\n           return [el.category, el.total_amount];\r\n        })\r\n           chartData.current.unshift([\"Budget Category\", \"Total Amount\"]);*/\n\n        console.log(recentData.current, summaryData.current);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    fetchData();\n  }, [forceRefetch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex flex-col lg:flex-row h-[100vh]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-4 mt-5 w-full lg:w-[52%] h-[90vh] \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-5xl font-bold mb-[2rem] mt-5 text-white text-center\",\n          children: \"My Budget\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ChartComp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" mx-0 lg:mx-6 mt-5  w-full lg:w-[48%] flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-black pt-2 pb-[2rem] px-6 mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl font-bold mb-[2rem] mt-5 text-white\",\n            children: \"Expense Totals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(SummaryTable, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-black w-full pt-2 pb-[2rem] px-6 mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl font-bold mb-[2rem] mt-5 text-white\",\n            children: \"Recent Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(TableComp, {\n            setForceRefetch: setForceRefetch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 2\n  }, this);\n}\n_s(DashBoardPage, \"rtCJcvHXWFgxAQScPT7xhkRP7sw=\");\n_c = DashBoardPage;\nexport default DashBoardPage;\nvar _c;\n$RefreshReg$(_c, \"DashBoardPage\");","map":{"version":3,"names":["Navbar","ChartComp","TableComp","SummaryTable","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","DashBoardPage","_s","summaryData","recentData","chartData","forceRefetch","setForceRefetch","fetchData","current","get","console","log","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/edwin/OneDrive/Desktop/PROJECTS/Budget_Tracker/frontend/src/pages/DashboardPage.jsx"],"sourcesContent":["import Navbar from \"../components/utils/Navbar\"\r\nimport ChartComp from \"../components/dashboard/ChartComp\";\r\nimport TableComp from \"../components/dashboard/TableComp\";\r\nimport SummaryTable from \"../components/dashboard/SummaryTable\";\r\nimport { useState, useEffect, useRef} from \"react\";\r\nimport axios from \"axios\"\r\n\r\n\r\n\r\nfunction DashBoardPage(){\r\n\r\n//want to store data between renders, but no need rerender if data modified\r\nlet summaryData = useRef([]);\r\nlet recentData = useRef([]);\r\nlet chartData = useRef([]);\r\n\r\n//State to refetch All data when editing/deleting from recent table\r\nconst [forceRefetch, setForceRefetch] = useState(false);\r\n\r\nuseEffect(()=>{\r\n async function fetchData(){\r\n   try{\r\n     summaryData.current = await axios.get(\"http://localhost:8800/summary\");\r\n     recentData.current = await  axios.get(\"http://localhost:8800/summary/recent\");\r\n\r\n     /*chartData.current = summaryData.current.map((el)=>{\r\n        return [el.category, el.total_amount];\r\n     })\r\n \r\n     chartData.current.unshift([\"Budget Category\", \"Total Amount\"]);*/\r\n\r\n     console.log(recentData.current, summaryData.current);\r\n     \r\n   }\r\n   catch(e){\r\n     console.log(e);\r\n   }\r\n }\r\n\r\nfetchData();\r\n},[forceRefetch])\r\n\r\n\r\n\r\n\r\nreturn(\r\n <div className=\"app\">\r\n  <Navbar/>\r\n  <div className=\"w-full flex flex-col lg:flex-row h-[100vh]\">\r\n    <div className=\"mx-4 mt-5 w-full lg:w-[52%] h-[90vh] \">\r\n        <h1 className=\"text-5xl font-bold mb-[2rem] mt-5 text-white text-center\">My Budget</h1>\r\n        <ChartComp/>\r\n    </div>\r\n    <div className=\" mx-0 lg:mx-6 mt-5  w-full lg:w-[48%] flex flex-col\">\r\n     <div className=\"bg-black pt-2 pb-[2rem] px-6 mt-5\"> \r\n       <h1 className=\"text-4xl font-bold mb-[2rem] mt-5 text-white\">Expense Totals</h1>\r\n       <SummaryTable/>\r\n     </div>\r\n     <div className=\"bg-black w-full pt-2 pb-[2rem] px-6 mt-6\"> \r\n       <h1 className=\"text-4xl font-bold mb-[2rem] mt-5 text-white\">Recent Expenses</h1>\r\n       <TableComp setForceRefetch={setForceRefetch}/>\r\n     </div>\r\n    </div>\r\n  </div>\r\n </div>\r\n)\r\n\r\n\r\n}\r\n\r\nexport default DashBoardPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}